---
- name: Create tf-admin SA and add token to Vault
  hosts: localhost
  connection: local
  gather_facts: false

  collections:
    - kubernetes.core
    - community.okd
    - community.crypto

  vars:
    #cluster_id: "{{ lookup('env', 'CLUSTER_ID') }}"
    vault_mount: "openshift-rosa-{{ cluster_id }}"
    vault_path: "admin/{{ vault_mount }}/data/ocp"
    sa_namespace: "kube-system"
    sa_name: "tf-admin"

    # These will be injected dynamically from AAP Vault credential
    #api_url: "{{ lookup('ansible.builtin.vars', 'vault_infra_api_url') }}"
    ocp_username: "cluster-admin"
    #ocp_password: "{{ lookup('ansible.builtin.vars', 'vault_infra_password') }}"

  tasks:
    - name: show password
      debug:
        var: vars
    - name: Log in to OpenShift
      community.okd.openshift_auth:
        host: "{{ api_url }}"
        username: "{{ ocp_username }}"
        password: "{{ ocp_password }}"
        validate_certs: false
      register: openshift_auth_results

    - name: Set fact for kubeconfig auth token
      ansible.builtin.set_fact:
        k8s_auth_api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"

    - name: Ensure tf-admin ServiceAccount exists
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: "{{ sa_name }}-{{ cluster_id }}"
            namespace: "{{ sa_namespace }}"
        api_key: "{{ k8s_auth_api_key }}"
        host: "{{ api_url }}"
        validate_certs: false

    - name: Bind tf-admin SA to cluster-admin
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: "tf-admin-crb-{{ cluster_id }}"
          subjects:
            - kind: ServiceAccount
              name: "{{ sa_name }}-{{ cluster_id }}"
              namespace: "{{ sa_namespace }}"
          roleRef:
            kind: ClusterRole
            name: cluster-admin
            apiGroup: rbac.authorization.k8s.io
        api_key: "{{ k8s_auth_api_key }}"
        host: "{{ api_url }}"
        validate_certs: false
        
    - name: Write tf-admin token to Vault HCP
      ansible.builtin.uri:
        url: "{{ vault_addr }}/v1/{{ vault_path }}"
        method: POST
        headers:
          X-Vault-Token: "{{ vault_token }}"
          Content-Type: "application/json"
        body_format: json
        body:
          data:
            token: "{{ k8s_auth_api_key }}"
      no_log: true
      register: vault_write_result

    - name: Confirm Vault write succeeded
      ansible.builtin.debug:
        msg: "Vault write completed with status {{ vault_write_result.status }}"
      when: vault_write_result.status is defined
